<!-- declare the model type for this view -->
@model List<Transaction>
@{
	// set page title
	ViewBag.Title = "Student Expense Tracker";
}

<div class="container my-4">
    <div class="row">
        <!-- container for total income -->
        <div class="col-md-4">
            <div class="card mb-3 bg-success text-white">
                <div class="card-body">
                    <h5 class="card-title">Total Income</h5>
                    <!-- Display total income here -->
                    <strong class="h4 font-weight-bold">@ViewBag.TotalIncome</strong>
                </div>
            </div>
        </div>

        <!-- container for total expense -->
        <div class="col-md-4">
            <div class="card mb-3 bg-danger text-white">
                <div class="card-body">
                    <h5 class="card-title">Total Expense</h5>
                    <!-- Display total expense here -->
                    <strong class="h4 font-weight-bold">@ViewBag.TotalExpense</strong>
                </div>
            </div>
        </div>

        <!-- container for balance -->
        <div class="col-md-4">
            <div class="card mb-3 bg-primary text-white">
                <div class="card-body">
                    <h5 class="card-title">Balance</h5>
                    <!-- Display balance here -->
                    <strong class="h4 font-weight-bold">@ViewBag.Balance</strong>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- search bar -->
<form asp-action="Filter" method="get">
    <div class="row mb-4">
        <div class="form-group col-md-11">
            <label>Search Transaction: </label>
            <input type="text" class="form-control" name="search" value="@ViewData["Search"]" placeholder="Enter description" />
        </div>

        <div class="form-group col-md-1">
            <button type="submit" class="btn btn-primary mt-4">Search</button>
        </div>                 
    </div>   

    <!-- hidden inputs to retain filter options -->
    <input type="hidden" name="search" value="@ViewData["Search"]" />
    <input type="hidden" name="categoryName" value="@ViewData["CategoryName"]" />
    <input type="hidden" name="type" value="@ViewData["Type"]" />
    <input type="hidden" name="startDate" value="@ViewData["StartDate"]" />
    <input type="hidden" name="endDate" value="@ViewData["EndDate"]" />
    <input type="hidden" name="sortBy" value="@ViewData["SortBy"]" />
</form>

<!-- filters -->
<div class="row">
    <!-- filter form -->
    <form class="col-md-10" asp-action="Filter" method="get">
        <div class="row">

            <!-- category options -->
            <div class="form-group col-md-2">
                <label>Category: </label>
                <select class="form-select" name="categoryName">
                    <option value="">All</option>
                    @foreach (var categoryName in ViewBag.DistinctCategoryNames)
                    {
                        <option value="@categoryName" selected="@(ViewData["CategoryName"] as string == categoryName)">
                            @categoryName
                        </option>
                    }
                </select>
            </div>

            <!-- transaction type options -->
            <div class="form-group col-md-2">
                <label>Type: </label>
                <select class="form-select" name="type">
                    <option value="">All</option>
                    <option value="Income" selected="@(ViewData["Type"] as string == "Income")">Income</option>
                    <option value="Expense" selected="@(ViewData["Type"] as string == "Expense")">Expense</option>
                </select>
            </div>

            <!-- start date -->
            <div class="form-group col-md-2">
                <label>Start Date: </label>
                <input type="date" class="form-control" name="startDate"
                       value="@(ViewData["StartDate"] as DateTime? != null ? ((DateTime?)ViewData["StartDate"])?.ToString("yyyy-MM-dd") : "")" />
            </div>

            <!-- end date -->
            <div class="form-group col-md-2">
                <label>End Date: </label>
                <input type="date" class="form-control" name="endDate"
                       value="@(ViewData["EndDate"] as DateTime? != null ? ((DateTime?)ViewData["EndDate"])?.ToString("yyyy-MM-dd") : "")" />
            </div>
            
            <!-- filter and clear buttons -->
            <div class="form-group col-md-2">
                <button type="submit" class="btn btn-primary mt-4">Filter</button>
                <a class="btn btn-secondary mt-4" asp-action="Index">Clear</a>
            </div>
        </div>

        <!-- button to add a new transaction -->

        <a class="btn btn-success mt-4 mb-4" asp-controller="Transaction" asp-action="Add">Add Transaction</a>

        <!-- hidden inputs to retain filter options -->
        <input type="hidden" name="search" value="@ViewData["Search"]" />
        <input type="hidden" name="startDate" value="@ViewData["StartDate"]" />
        <input type="hidden" name="endDate" value="@ViewData["EndDate"]" />
        <input type="hidden" name="sortBy" value="@ViewData["SortBy"]" />
    </form>

    <!-- sort by options -->
    <div class="col-md-2">
        <form asp-action="Filter" method="get">
            <select class="form-select" name="sortBy" onchange="this.form.submit()">
                <option value="">Sort By</option>
                <option value="dateAscending" selected="@(ViewData["SortBy"] as string == "dateAscending")">Date: Ascending</option>
                <option value="dateDescending" selected="@(ViewData["SortBy"] as string == "dateDescending")">Date: Descending</option>
                <option value="amountAscending" selected="@(ViewData["SortBy"] as string == "amountAscending")">Amount: Ascending</option>
                <option value="amountDescending" selected="@(ViewData["SortBy"] as string == "amountDescending")">Amount: Descending</option>
            </select>

            <!-- hidden inputs to retain filter options -->
            <input type="hidden" name="search" value="@ViewData["Search"]" />
            <input type="hidden" name="categoryName" value="@ViewData["CategoryName"]" />
            <input type="hidden" name="type" value="@ViewData["Type"]" />
            <input type="hidden" name="startDate" value="@ViewData["StartDate"]" />
            <input type="hidden" name="endDate" value="@ViewData["EndDate"]" />
        </form>
    </div>
</div>

<!-- check if there are existing transactions -->
@if (Model.Count > 0)
{
    <!-- display transactions in a table -->
    <table class="table table-bordered table-striped">
        <thead>
            <tr>
                <th class="text-center">Category</th>
                <th class="text-center">Description</th>
                <th class="text-center">Date</th>
                <th class="text-center">Amount</th>
                <th class="text-center">Actions</th>
            </tr>
        </thead>

        <tbody>
            <!-- loop through each transaction in the model -->
            @foreach (var transaction in Model)
            {
                <tr>
                    <td class="text-center">@transaction.Category.Name</td>
                    <td class="text-center">@transaction.Description</td>
                    <td class="text-center">@transaction.Date.ToShortDateString()</td>
                    <td class="text-center">@transaction.FormattedAmount</td>
                    <td class="text-center">
                        <a asp-controller="Transaction" asp-action="Edit" asp-route-id="@transaction.TransactionId" class="me-3"><i class="bi bi-pencil-fill"></i></a>
                        <a asp-controller="Transaction" asp-action="Delete" asp-route-id="@transaction.TransactionId"><i class="bi bi-trash-fill"></i></a>
                    </td>

                </tr>
            }
        </tbody>
    </table>
}
else
{
    <!-- display message if no transactions found -->
    <div class="text-center mt-5">
        <h3>No transactions found.</h3>
    </div>
}
